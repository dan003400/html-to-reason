// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Copy_textJs = require("../copy_text.js");
var Templates$LoginForm = require("../Templates.bs.js");
var HtmlConverter$LoginForm = require("../HtmlConverter.bs.js");

var defaultText = "<div class=\"flex items-center w-full\" style=\"font-weight: bolder\">Hello there! Go on &amp; convert your html!</div>";

var initialState_jsx = HtmlConverter$LoginForm.convert("__DEFAULT__", defaultText, false);

var initialState = {
  html: defaultText,
  jsx: initialState_jsx
};

function reducer(_state, action) {
  var str = action._0;
  return {
          html: str,
          jsx: HtmlConverter$LoginForm.convert("_INLINE_", str, action._1)
        };
}

function copy_text(prim) {
  Copy_textJs(prim);
  
}

function copyOutput(param) {
  Copy_textJs("copyMe");
  
}

function Index$default(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setTailwind = match$1[1];
  var tailwind = match$1[0];
  var tailwindClass = tailwind ? "bg-indigo-600" : "bg-gray-200";
  var switchClass = tailwind ? "translate-x-5" : "translate-x-0";
  React.useEffect((function () {
          Curry._1(dispatch, /* UpdateHTML */{
                _0: state.html,
                _1: tailwind
              });
          
        }), [tailwind]);
  return React.createElement("div", {
              className: "flex flex-col w-screen h-screen bg-gray-200"
            }, Templates$LoginForm.header, React.createElement("div", {
                  className: "flex-1 w-full px-4 mx-auto mb-8 grid grid-cols-2 gap-4"
                }, React.createElement("div", {
                      className: "overflow-hidden bg-white border-b-2 border-yellow-400 rounded-lg shadow shadow-lg",
                      id: "input"
                    }, React.createElement("div", {
                          className: "flex items-center px-3 py-4 text-yellow-600 bg-yellow-200 border-b-2 border-yellow-400 sm:px-6"
                        }, React.createElement("h1", {
                              className: "flex-1 text-lg font-bold"
                            }, "Paste HTML"), React.createElement("div", {
                              className: "mr-2"
                            }, "Tailwind PPX"), React.createElement("span", {
                              className: "relative inline-flex flex-shrink-0 h-7 bg-gray-200 border-2 border-transparent rounded-full\n                cursor-pointer w-12 transition-colors ease-in-out duration-200 focus:outline-none focus:shadow-outline\n                  " + tailwindClass,
                              role: "checkbox",
                              tabIndex: 0,
                              onClick: (function (param) {
                                  return Curry._1(setTailwind, (function (param) {
                                                return !tailwind;
                                              }));
                                })
                            }, React.createElement("span", {
                                  "aria-hidden": true,
                                  className: "inline-block w-6 h-6 bg-white rounded-full shadow translate-x-0 transform transition\n                    ease-in-out duration-200 " + switchClass
                                }))), React.createElement("div", {
                          className: "h-full p-1"
                        }, React.createElement("textarea", {
                              className: "w-full h-full p-4 outline-none focus:shadow-outline",
                              placeholder: "<div class=\"placeholder\">Paste something in here!</div>",
                              value: state.html,
                              onChange: (function (evt) {
                                  var v = evt.target.value;
                                  return Curry._1(dispatch, /* UpdateHTML */{
                                              _0: v,
                                              _1: tailwind
                                            });
                                })
                            }))), React.createElement("div", {
                      className: "overflow-hidden bg-white border-b-2 border-red-400 rounded-lg shadow shadow-lg",
                      id: "output"
                    }, React.createElement("div", {
                          className: "flex justify-between px-3 py-4 text-red-600 bg-red-200 border-b-2 border-red-400 sm:px-6"
                        }, React.createElement("h1", {
                              className: "text-lg font-bold"
                            }, "Copy Rescript"), React.createElement("button", {
                              onClick: (function (param) {
                                  Copy_textJs("copyMe");
                                  
                                })
                            }, Templates$LoginForm.clipboard)), React.createElement("div", {
                          className: "h-full p-1"
                        }, React.createElement("textarea", {
                              className: "w-full h-full p-4 outline-none focus:shadow-outline",
                              id: "copyMe",
                              readOnly: true,
                              value: state.jsx
                            })))), Templates$LoginForm.footer);
}

var $$default = Index$default;

exports.defaultText = defaultText;
exports.initialState = initialState;
exports.reducer = reducer;
exports.copy_text = copy_text;
exports.copyOutput = copyOutput;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* initialState Not a pure module */

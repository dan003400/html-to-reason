// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var LodashCamelcase = require("lodash.camelcase");
var Ast_operationsJs = require("./ast_operations.js");

function replaceClassWithClassName(source) {
  var pattern = new RegExp("class=", "g");
  return source.replace(pattern, "className=");
}

function replaceTypeWithType_(source) {
  var pattern = new RegExp("type=", "g");
  return source.replace(pattern, "type_=");
}

function replaceForWithHtmlFor(source) {
  var pattern = new RegExp("for=", "g");
  return source.replace(pattern, "htmlFor=");
}

function ast_operations(prim) {
  return Ast_operationsJs(prim);
}

function camelAttrs(str) {
  var tagAttrsPattern = new RegExp("<(.*)>", "g");
  var attrNamesPattern = new RegExp("([\\w-]+)=", "g");
  return str.replace(tagAttrsPattern, (function (fullMatch, param) {
                return fullMatch.replace(attrNamesPattern, (function (param, captured2) {
                              return LodashCamelcase(captured2) + "=";
                            }));
              }));
}

function go(source) {
  return camelAttrs(replaceForWithHtmlFor(replaceTypeWithType_(replaceClassWithClassName(Ast_operationsJs(source)))));
}

exports.replaceClassWithClassName = replaceClassWithClassName;
exports.replaceTypeWithType_ = replaceTypeWithType_;
exports.replaceForWithHtmlFor = replaceForWithHtmlFor;
exports.ast_operations = ast_operations;
exports.camelAttrs = camelAttrs;
exports.go = go;
/* lodash.camelcase Not a pure module */
